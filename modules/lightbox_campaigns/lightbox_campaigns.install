<?php

/**
 * @file
 * Install, update and uninstall functions for the Lightbox Campaigns module.
 */

/**
 * Implements hook_requirements().
 */
function lightbox_campaigns_requirements($phase) {
  if ($phase != 'runtime') {
    return FALSE;
  }

  $return = [];

  // Check for the required lightbox library.
  $library_path = 'libraries/featherlight';
  if (file_exists(DRUPAL_ROOT . '/' . $library_path . '/package.json')) {
    $return['lightbox_campaigns_library'] = [
      'title' => t('Featherlight'),
      'severity' => REQUIREMENT_OK,
      'value' => t('Featherlight library version %version installed.',
        [
          '%version' => _lightbox_campaigns_get_version(),
        ]),
    ];
  }
  else {
    $return['lightbox_campaigns_library'] = [
      'title' => t('Featherlight'),
      'severity' => REQUIREMENT_ERROR,
      'value' => t('Featherlight library was not found. Download 
        <a href=":link">the latest version of library</a> and place it in the 
        libraries directory (/libraries/featherlight).',
        [
          ':link' => 'https://github.com/noelboss/featherlight/releases',
        ]),
    ];
  }

  return $return;
}

/**
 * Gets the version information for the featherlight library.
 *
 * @return string
 *   A string containing the version of the library or empty if the version
 *   cannot be found.
 */
function _lightbox_campaigns_get_version() {
  $options = [
    'file' => 'package.json',
    'pattern' => '@"version":\s*\"?([0-9a-zA-Z\.-]+)\"?@',
    'lines' => 5,
    'cols' => 80,
  ];
  $version = '';
  $library_path = 'libraries/featherlight';
  $file = DRUPAL_ROOT . '/' . $library_path . '/' . $options['file'];

  if (!empty($options['file']) && file_exists($file)) {
    $file = fopen($file, 'r');
    while ($options['lines'] && $line = fgets($file, $options['cols'])) {
      if (preg_match($options['pattern'], $line, $version)) {
        break;
      }
      $options['lines']--;
    }
    fclose($file);
  }
  return $version[1];
}

/**
 * Add new "Do not trigger." option to lightbox campaign entities.
 */
function lightbox_campaigns_update_8101() {
  \Drupal::service('entity.definition_update_manager')->applyUpdates();
}
